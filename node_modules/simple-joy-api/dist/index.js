"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JoyApi = void 0;
const axiosService_1 = __importDefault(require("./services/axiosService"));
const pageParser_1 = __importDefault(require("./parsers/pageParser"));
class JoyApi {
    constructor(baseUrl = 'http://joyreactor.cc/') {
        this.instance = axiosService_1.default.createInstance(baseUrl);
    }
    getHomePage(pageNumber = null) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const url = pageNumber ? '/' + pageNumber : '/';
                const $cheerio = yield this.instance.get(url);
                return pageParser_1.default.parsePage($cheerio);
            }
            catch (e) {
                console.log(e);
            }
        });
    }
    getTagPage(pageNumber = null, tag) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                let url = '/tag/';
                url += tag.replace(/\s/, '+');
                url += pageNumber ? '/' + pageNumber : '';
                const $cheerio = yield this.instance.get(encodeURI(url));
                return pageParser_1.default.parsePage($cheerio);
            }
            catch (e) {
                console.log(e);
            }
        });
    }
    getUserPage(pageNumber = null, user) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                let url = '/user/';
                url += user.replace(/\s/, '+');
                url += pageNumber ? '/' + pageNumber : '';
                const $cheerio = yield this.instance.get(encodeURI(url));
                return pageParser_1.default.parsePage($cheerio);
            }
            catch (e) {
                console.log(e);
            }
        });
    }
}
exports.JoyApi = JoyApi;
